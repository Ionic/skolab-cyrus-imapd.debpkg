Description: Cleanly close sockets
 Rewritten in an arguably more elegant fashion, should supersede
 the modern 0002-Shutdown-and-close-sockets-cleanly.patch.
Author: Sven Mueller <debian@incase.de>
Forwarded: no
Last-Update: 2022-05-05

---
 imap/fud.c   | 10 ++++++++++
 imap/imapd.c |  5 +++++
 imap/lmtpd.c |  3 +++
 imap/pop3d.c |  5 +++++
 4 files changed, 23 insertions(+)

diff --git a/imap/fud.c b/imap/fud.c
index 447b904da..5fea0772a 100644
--- a/imap/fud.c
+++ b/imap/fud.c
@@ -69,6 +69,7 @@
 #include "mboxname.h"
 #include "proc.h"
 #include "seen.h"
+#include "util.h"
 #include "xmalloc.h"
 
 /* generated headers are not necessarily in current directory */
@@ -140,11 +141,20 @@ static int begin_handling(void)
 void shut_down(int code) __attribute__((noreturn));
 void shut_down(int code)
 {
+    int i = 0;
+
     in_shutdown = 1;
 
     seen_done();
     closelog();
     cyrus_done();
+
+    /* be nice to remote */
+    for (i = 0; 3 > i; ++i)
+    {
+        cyrus_close_sock(i);
+    }
+
     exit(code);
 }
 
diff --git a/imap/imapd.c b/imap/imapd.c
index 109f19fc4..9e418b4cf 100644
--- a/imap/imapd.c
+++ b/imap/imapd.c
@@ -1136,6 +1136,11 @@ void shut_down(int code)
 #ifdef HAVE_SSL
     tls_shutdown_serverengine();
 #endif
+    /* shutdown socket nicely */
+    for (i = 0; 3 > i; ++i)
+    {
+        cyrus_close_sock(i);
+    }
 
     saslprops_free(&saslprops);
 
diff --git a/imap/lmtpd.c b/imap/lmtpd.c
index 76f08006d..71204241c 100644
--- a/imap/lmtpd.c
+++ b/imap/lmtpd.c
@@ -1041,6 +1041,9 @@ void shut_down(int code)
 
     cyrus_done();
 
+    /* shutdown socket nicely */
+    cyrus_reset_stdio();
+
     exit(code);
 }
 
diff --git a/imap/pop3d.c b/imap/pop3d.c
index 57db6c0c8..9b7f7f2cf 100644
--- a/imap/pop3d.c
+++ b/imap/pop3d.c
@@ -599,6 +599,7 @@ void shut_down(int code)
 {
     int bytes_in = 0;
     int bytes_out = 0;
+    int i = 0;
 
     in_shutdown = 1;
 
@@ -650,6 +651,10 @@ void shut_down(int code)
     saslprops_free(&saslprops);
 
     cyrus_done();
+    for (i = 0; 3 > i; ++i)
+    {
+        cyrus_close_sock(i);
+    }
 
     if (config_iolog) {
         read_io_count(io_count_stop);
