#! /bin/sh /usr/share/dpatch/dpatch-run
## filezzWItT.dpatch by Sven Mueller <sven@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
--- a/imap/index.c
+++ b/imap/index.c
@@ -41,7 +41,7 @@
  *
  */
 /*
- * $Id: index.c,v 1.218 2005/06/02 15:47:58 ken3 Exp $
+ * $Id: index.c,v 1.218.2.2 2006/12/19 19:32:59 murch Exp $
  */
 #include <config.h>
 
@@ -3285,7 +3285,8 @@ static MsgData *index_msgdata_load(unsig
 		break;
 	    case SORT_DATE:
 		cur->date = message_parse_date(envtokens[ENV_DATE],
-					       PARSE_TIME | PARSE_ZONE);
+					       PARSE_TIME | PARSE_ZONE
+					       | PARSE_NOCREATE);
 		break;
 	    case SORT_FROM:
 		cur->from = get_localpart_addr(from + CACHE_ITEM_SIZE_SKIP);
@@ -3780,10 +3781,12 @@ static int index_sort_compare(MsgData *m
 	case SORT_CC:
 	    ret = strcmp(md1->cc, md2->cc);
 	    break;
-	case SORT_DATE:
-	    ret = (md1->date && md2->date) ?
-		numcmp(md1->date, md2->date) : numcmp(md1->msgno, md2->msgno);
+	case SORT_DATE: {
+	    time_t d1 = md1->date ? md1->date : INTERNALDATE(md1->msgno);
+	    time_t d2 = md2->date ? md2->date : INTERNALDATE(md2->msgno);
+	    ret = numcmp(d1, d2);
 	    break;
+	}
 	case SORT_FROM:
 	    ret = strcmp(md1->from, md2->from);
 	    break;
--- a/imap/message.c
+++ b/imap/message.c
@@ -41,7 +41,7 @@
  */
 
 /*
- * $Id: message.c,v 1.99 2004/09/16 17:58:54 ken3 Exp $
+ * $Id: message.c,v 1.99.2.1 2006/12/19 18:57:48 murch Exp $
  */
 
 #include <config.h>
@@ -1429,7 +1429,7 @@ unsigned flags;
     if (t >= 0) return (t - zone_off * 60);
     
  baddate:
-    return time(0);
+    return (flags & PARSE_NOCREATE) ? 0 : time(0);
 }
 
 /*
--- a/imap/message.h
+++ b/imap/message.h
@@ -1,5 +1,5 @@
 /* message.h -- Message parsing
- $Id: message.h,v 1.6 2003/02/13 20:15:28 rjs3 Exp $
+ $Id: message.h,v 1.6.6.1 2006/12/19 18:57:48 murch Exp $
 
  * Copyright (c) 1998-2003 Carnegie Mellon University.  All rights reserved.
  *
@@ -61,9 +61,10 @@ extern int message_copy_strict P((struct
 				  unsigned size));
 
 /* Flags for parsing message date/time - to be bitwise OR'd */
-#define PARSE_DATE	(1<<0)
+#define PARSE_DATE	(1<<0)  /* Default (always parsed) */
 #define PARSE_TIME	(1<<1)
 #define PARSE_ZONE	(1<<2)
+#define PARSE_NOCREATE	(1<<15) /* Don't create one if its missing/invalid */
 
 extern time_t message_parse_date P((char *hdr, unsigned flags));
 extern int message_parse_file P((FILE *infile, struct mailbox *mailbox,
