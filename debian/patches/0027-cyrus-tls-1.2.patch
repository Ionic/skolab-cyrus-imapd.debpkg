From: Debian Cyrus Team <pkg-cyrus-imapd-debian-devel@lists.alioth.debian.org>
Date: Tue, 4 Aug 2015 10:38:07 +0200
Subject: cyrus-tls-1.2

---
 imap/tls.c      | 4 ++--
 imtest/imtest.c | 4 +++-
 lib/imclient.c  | 4 +++-
 3 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/imap/tls.c b/imap/tls.c
index 156a18a..3116897 100644
--- a/imap/tls.c
+++ b/imap/tls.c
@@ -676,7 +676,7 @@ EXPORTED int     tls_init_serverengine(const char *ident,
 
     /* even if we want TLS only, we use SSLv23 server method so we can
        deal with a client sending an SSLv2 greeting message */
-    s_ctx = SSL_CTX_new(SSLv23_server_method());
+    s_ctx = SSL_CTX_new(TLS_server_method());
     if (s_ctx == NULL) {
         return (-1);
     };
@@ -1403,7 +1403,7 @@ HIDDEN int tls_init_clientengine(int verifydepth,
     }
 
     /* XXX  May need to use only SSLv3 for iSchedule */
-    c_ctx = SSL_CTX_new(SSLv23_client_method());
+    c_ctx = SSL_CTX_new(TLS_client_method());
     if (c_ctx == NULL) {
         return (-1);
     };
diff --git a/imtest/imtest.c b/imtest/imtest.c
index 9f1d5d4..1b4a56d 100644
--- a/imtest/imtest.c
+++ b/imtest/imtest.c
@@ -491,12 +491,14 @@ static int tls_init_clientengine(int verifydepth, char *var_tls_cert_file, char
         return IMTEST_FAIL;
     }
 
-    tls_ctx = SSL_CTX_new(SSLv23_client_method());
+    tls_ctx = SSL_CTX_new(TLS_client_method());
     if (tls_ctx == NULL) {
         return IMTEST_FAIL;
     };
 
     off |= SSL_OP_ALL;          /* Work around all known bugs */
+    off |= SSL_OP_NO_SSLv2;     /* Disable insecure SSLv2 */
+    off |= SSL_OP_NO_SSLv3;     /* Disable insecure SSLv3 */
     SSL_CTX_set_options(tls_ctx, off);
     SSL_CTX_set_info_callback(tls_ctx, apps_ssl_info_callback);
 
diff --git a/lib/imclient.c b/lib/imclient.c
index 6ade532..30a0804 100644
--- a/lib/imclient.c
+++ b/lib/imclient.c
@@ -1631,12 +1631,14 @@ static int tls_init_clientengine(struct imclient *imclient,
         return -1;
     }
 
-    imclient->tls_ctx = SSL_CTX_new(TLSv1_client_method());
+    imclient->tls_ctx = SSL_CTX_new(TLS_client_method());
     if (imclient->tls_ctx == NULL) {
         return -1;
     };
 
     off |= SSL_OP_ALL;          /* Work around all known bugs */
+    off |= SSL_OP_NO_SSLv2;     /* Disable insecure SSLv2 */
+    off |= SSL_OP_NO_SSLv3;     /* Disable insecure SSLv3 */
     SSL_CTX_set_options(imclient->tls_ctx, off);
 
     /* debugging   SSL_CTX_set_info_callback(imclient->tls_ctx, apps_ssl_info_callback); */
