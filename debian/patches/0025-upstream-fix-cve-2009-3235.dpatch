#! /bin/sh /usr/share/dpatch/dpatch-run
## 0025_upstream-fix-cve-2009-3235.dpatch by Henrique de Moraes Holschuh <hmh@debian.org>
##
## DP: Fixes for CVE 2009-3235 (multiple Sieve buffer overruns, remote exploitable)
## DP: taken from upstream CVS, Debian bug #547947

@DPATCH@
--- a/sieve/bc_eval.c
+++ b/sieve/bc_eval.c
@@ -440,7 +440,7 @@ int eval_bc_test(sieve_interp_t *interp,
 	int comparator=ntohl(bc[i+3].value);
 	int apart=ntohl(bc[i+4].value);
 	int count=0;
-	char scount[3];
+	char scount[21];
 	int isReg = (match==B_REGEX);
 	int ctag = 0;
 	regex_t *reg;
@@ -574,7 +574,7 @@ int eval_bc_test(sieve_interp_t *interp,
      
 	if  (match == B_COUNT)
 	{
-	    sprintf(scount, "%u", count);
+	    snprintf(scount, sizeof(scount), "%u", count);
 	    /* search through all the data */ 
 	    currd=datai+2;
 	    for (z=0; z<numdata && !res; z++)
@@ -608,7 +608,7 @@ int eval_bc_test(sieve_interp_t *interp,
 	int relation=ntohl(bc[i+2].value);
 	int comparator=ntohl(bc[i+3].value);
 	int count=0;	
-	char scount[3];
+	char scount[21];
 	int isReg = (match==B_REGEX);
 	int ctag = 0;
 	regex_t *reg;
@@ -689,7 +689,7 @@ int eval_bc_test(sieve_interp_t *interp,
 	
 	if  (match == B_COUNT )
 	{
-	    sprintf(scount, "%u", count);
+	    snprintf(scount, sizeof(scount), "%u", count);
 	    /*search through all the data*/ 
 	    currd=datai+2;
 	    for (z=0; z<numdata && !res; z++)
--- a/sieve/script.c
+++ b/sieve/script.c
@@ -526,9 +526,9 @@ static int do_sieve_error(int ret,
     if ((ret != SIEVE_OK) && interp->err) {
 	char buf[1024];
 	if (lastaction == -1) /* we never executed an action */
-	    sprintf(buf, "%s", errmsg ? errmsg : sieve_errstr(ret));
+	    snprintf(buf, sizeof(buf), "%s", errmsg ? errmsg : sieve_errstr(ret));
 	else
-	    sprintf(buf, "%s: %s", action_to_string(lastaction),
+	    snprintf(buf, sizeof(buf), "%s: %s", action_to_string(lastaction),
 		    errmsg ? errmsg : sieve_errstr(ret));
  
 	ret |= interp->execute_err(buf, interp->interp_context,
--- a/sieve/sieve.y
+++ b/sieve/sieve.y
@@ -923,7 +923,7 @@ static int verify_relat(char *r)
 	else if (!strcmp(r, "ne")) {return NE;}
 	else if (!strcmp(r, "eq")) {return EQ;}
 	else{
-	  sprintf(errbuf, "flag '%s': not a valid relational operation", r);
+	  snprintf(errbuf, sizeof(errbuf), "flag '%s': not a valid relational operation", r);
 	  yyerror(errbuf);
 	  return -1;
 	}
