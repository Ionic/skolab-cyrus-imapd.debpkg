#! /bin/sh /usr/share/dpatch/dpatch-run
## 0090-fix-casts.dpatch by Sven Mueller <debian@incase.de>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Fix compile-time warnings about casts from pointer to integer 
## DP: of different size.

@DPATCH@
--- a/imap/squat_build.c
+++ b/imap/squat_build.c
@@ -479,7 +479,7 @@ static void delete_doc_word_table(SquatW
     for (i = 0; i < VECTOR_SIZE(t->entries); i++) {
       SquatWordTableEntry* e = &(t->entries[i]);
       
-      if (e->leaf_presence != NULL && ((int)e->leaf_presence & 1) == 0) {
+      if (e->leaf_presence != NULL && ((int)e->leaf_presence_singleton & 1) == 0) {
         free(e->leaf_presence);
       }
     }
@@ -568,7 +568,7 @@ static int add_to_table(SquatIndex* inde
 
   if (word_entry == NULL) {
     /* We are in "per document" mode. */
-    if (((int)e->leaf_presence & 1) != 0) {
+    if (((int)e->leaf_presence_singleton & 1) != 0) {
       /* We currently have a singleton here. */
       int oldch = e->leaf_presence_singleton >> 1;
 
@@ -787,7 +787,7 @@ static int write_words(SquatIndex* index
 
       word[0] = (char)i;
 
-      if (((int)e->leaf_presence & 1) != 0) {
+      if (((int)e->leaf_presence_singleton & 1) != 0) {
 	/* Got a singleton at this branch point. Just output the single word. */
         word[1] = (char)(e->leaf_presence_singleton >> 1);
         e->leaf_presence = NULL; /* clear the leaf out */
--- a/imap/tls.c
+++ b/imap/tls.c
@@ -717,14 +717,22 @@ static long bio_dump_cb(BIO * bio, int c
 	return (ret);
 
     if (cmd == (BIO_CB_READ | BIO_CB_RETURN)) {
-	printf("read from %08X [%08lX] (%d bytes => %ld (0x%X))",
-	       (unsigned int) bio, (long unsigned int) argp,
+#if __WORDSIZE == 64
+	printf("read from %016zX [%016zX] (%d bytes => %ld (0x%X))",
+#else
+	printf("read from %08zX [%08zX] (%d bytes => %ld (0x%X))",
+#endif
+	       (size_t) bio, (size_t) argp,
 	       argi, ret, (unsigned int) ret);
 	tls_dump(argp, (int) ret);
 	return (ret);
     } else if (cmd == (BIO_CB_WRITE | BIO_CB_RETURN)) {
-	printf("write to %08X [%08lX] (%d bytes => %ld (0x%X))",
-	       (unsigned int) bio, (long unsigned int)argp,
+#if __WORDSIZE == 64
+	printf("write to %016zX [%016zX] (%d bytes => %ld (0x%X))",
+#else
+	printf("write to %08zX [%08zX] (%d bytes => %ld (0x%X))",
+#endif
+	       (size_t) bio, (size_t)argp,
 	       argi, ret, (unsigned int) ret);
 	tls_dump(argp, (int) ret);
     }
--- a/master/master.c
+++ b/master/master.c
@@ -1304,7 +1304,6 @@ void add_start(const char *name, struct
 
 void add_service(const char *name, struct entry *e, void *rock)
 {
-    int ignore_err = (int) rock;
     char *cmd = xstrdup(masterconf_getstring(e, "cmd", ""));
     int prefork = masterconf_getint(e, "prefork", 0);
     int babysit = masterconf_getswitch(e, "babysit", 0);
@@ -1324,7 +1323,7 @@ void add_service(const char *name, struc
 	snprintf(buf, sizeof(buf),
 		 "unable to find command or port for service '%s'", name);
 
-	if (ignore_err) {
+	if (rock != NULL) {
 	    syslog(LOG_WARNING, "WARNING: %s -- ignored", buf);
 	    return;
 	}
@@ -1340,7 +1339,7 @@ void add_service(const char *name, struc
 	/* must have empty/same service name, listen and proto */
 	if ((!Services[i].name || !strcmp(Services[i].name, name)) &&
 	    (!Services[i].listen || !strcmp(Services[i].listen, listen)) &&
-	    (!Services[i].proto || !strcmp(Services[i].proto, proto)))
+	    ((Services[i].proto==NULL) || !strcmp(Services[i].proto, proto)))
 	    break;
     }
 
@@ -1349,7 +1348,7 @@ void add_service(const char *name, struc
 	char buf[256];
 	snprintf(buf, sizeof(buf), "multiple entries for service '%s'", name);
 
-	if (ignore_err) {
+	if (rock != NULL) {
 	    syslog(LOG_WARNING, "WARNING: %s -- ignored", buf);
 	    return;
 	}
@@ -1438,7 +1437,6 @@ void add_service(const char *name, struc
 
 void add_event(const char *name, struct entry *e, void *rock)
 {
-    int ignore_err = (int) rock;
     char *cmd = xstrdup(masterconf_getstring(e, "cmd", ""));
     int period = 60 * masterconf_getint(e, "period", 0);
     int at = masterconf_getint(e, "at", -1), hour, min;
@@ -1450,7 +1448,7 @@ void add_event(const char *name, struct
 	snprintf(buf, sizeof(buf),
 		 "unable to find command or port for event '%s'", name);
 
-	if (ignore_err) {
+	if (rock != NULL) {
 	    syslog(LOG_WARNING, "WARNING: %s -- ignored", buf);
 	    return;
 	}
