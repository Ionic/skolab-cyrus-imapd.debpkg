#! /bin/sh /usr/share/dpatch/dpatch-run
## 26-local-getline.dpatch by Mathieu Parent <sathieu@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Rename conflicting function getline
## DP: See http://bugs.debian.org/552865 and http://bugs.debian.org/552848

@DPATCH@
--- a/contrib/sieve-spamasssassin
+++ b/contrib/sieve-spamasssassin
@@ -85,7 +85,7 @@ diff -cr cyrus-imapd-2.1.3-orig/imap/lmt
 + /* spam support */
 + 
 + static int
-+ getline (int s, char *buf, int len)
++ local_getline (int s, char *buf, int len)
 + {
 +     char *bp = buf;
 +     int ret = 1;
@@ -129,8 +129,8 @@ diff -cr cyrus-imapd-2.1.3-orig/imap/lmt
 +     int score;
 +     int threshold;
 + 
-+     if (! getline (s, buf, sizeof (buf))) {
-+ 	syslog (LOG_ERR, "read_response: response getline failed");
++     if (! local_getline (s, buf, sizeof (buf))) {
++ 	syslog (LOG_ERR, "read_response: response local_getline failed");
 + 	return SIEVE_FAIL;
 +     }
 +     if (sscanf (buf, "SPAMD/%d.%d %d %*s", &major, &minor, &response) != 3) {
@@ -143,8 +143,8 @@ diff -cr cyrus-imapd-2.1.3-orig/imap/lmt
 + 		major, minor);
 + 	return SIEVE_FAIL;
 +     }
-+     if (! getline (s, buf, sizeof (buf))) {
-+ 	syslog (LOG_ERR, "read_response: header getline failed");
++     if (! local_getline (s, buf, sizeof (buf))) {
++ 	syslog (LOG_ERR, "read_response: header local_getline failed");
 + 	return SIEVE_FAIL;
 +     }
 +     if (sscanf (buf, "Spam: %5s ; %d / %d", is_spam, &score, &threshold) != 3) {
--- a/makedepend/def.h
+++ b/makedepend/def.h
@@ -161,7 +161,7 @@ char			*realloc();
 
 char			*copy();
 char			*base_name();
-char			*getline();
+char			*local_getline();
 struct symtab		*slookup();
 struct symtab		*isdefined();
 struct symtab		*fdefined();
--- a/makedepend/main.c
+++ b/makedepend/main.c
@@ -548,7 +548,7 @@ match(str, list)
  * Get the next line.  We only return lines beginning with '#' since that
  * is all this program is ever interested in.
  */
-char *getline(filep)
+char *local_getline(filep)
 	register struct filepointer	*filep;
 {
 	register char	*p,	/* walking pointer */
--- a/makedepend/parse.c
+++ b/makedepend/parse.c
@@ -82,7 +82,7 @@ find_includes(filep, file, file_red, rec
 	register int	type;
 	boolean recfailOK;
 
-	while (line = getline(filep)) {
+	while (line = local_getline(filep)) {
 		switch(type = deftype(line, filep, file_red, file, TRUE)) {
 		case IF:
 		doif:
@@ -204,7 +204,7 @@ gobble(filep, file, file_red)
 	register char	*line;
 	register int	type;
 
-	while (line = getline(filep)) {
+	while (line = local_getline(filep)) {
 		switch(type = deftype(line, filep, file_red, file, FALSE)) {
 		case IF:
 		case IFFALSE:
