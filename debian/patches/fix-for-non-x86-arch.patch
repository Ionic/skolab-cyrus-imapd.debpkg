Description: fix for non x86 arch
 The problem here is va_list. On some architectures, the calling convention
 doesn't seem to allow comparing va_list against NULL due to the way va_list
 is implemented on a particular architecture.
 .
 You could maybe add an auxiliary boolean variable to control whether
 "va_list args" is empty or not, i.e. something like this:
Author: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
Bug: https://github.com/cyrusimap/cyrus-imapd/issues/3040
Bug-Debian: https://bugs.debian.org/960263
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: Xavier Guimard <yadd@debian.org>
Last-Update: 2020-05-12

--- a/imap/httpd.c
+++ b/imap/httpd.c
@@ -2350,7 +2350,7 @@
     simple_hdr(txn, "Access-Control-Expose-Headers", hdr)
 
 static void comma_list_body(struct buf *buf,
-                            const char *vals[], unsigned flags, va_list args)
+                            const char *vals[], unsigned flags, int has_args, va_list args)
 {
     const char *sep = "";
     int i;
@@ -2358,11 +2358,11 @@
     for (i = 0; vals[i]; i++) {
         if (flags & (1 << i)) {
             buf_appendcstr(buf, sep);
-            if (args) buf_vprintf(buf, vals[i], args);
+            if (has_args) buf_vprintf(buf, vals[i], args);
             else buf_appendcstr(buf, vals[i]);
             sep = ", ";
         }
-        else if (args) {
+        else if (has_args) {
             /* discard any unused args */
             vsnprintf(NULL, 0, vals[i], args);
         }
@@ -2377,7 +2377,7 @@
 
     va_start(args, flags);
 
-    comma_list_body(&buf, vals, flags, args);
+    comma_list_body(&buf, vals, flags, 1, args);
 
     va_end(args);
 
@@ -3077,17 +3077,17 @@
     }
     if (code == HTTP_SWITCH_PROT || code == HTTP_UPGRADE) {
         buf_printf(logbuf, "%supgrade=", sep);
-        comma_list_body(logbuf, upgrd_tokens, txn->flags.upgrade, NULL);
+        comma_list_body(logbuf, upgrd_tokens, txn->flags.upgrade, 0, 0);
         sep = "; ";
     }
     if (txn->flags.te) {
         buf_printf(logbuf, "%stx-encoding=", sep);
-        comma_list_body(logbuf, te, txn->flags.te, NULL);
+        comma_list_body(logbuf, te, txn->flags.te, 0, 0);
         sep = "; ";
     }
     if (txn->resp_body.enc.proc) {
         buf_printf(logbuf, "%scnt-encoding=", sep);
-        comma_list_body(logbuf, ce, txn->resp_body.enc.type, NULL);
+        comma_list_body(logbuf, ce, txn->resp_body.enc.type, 0, 0);
         sep = "; ";
     }
     if (txn->location) {
--- /dev/null
+++ b/t
@@ -0,0 +1,106 @@
+    2.0.8+ds1-2
+    2.0.8+ds1-1
+    2.0.8+ds1-1~bpo10+1
+    2.0.8+ds-1
+    2.0.7+ds-5
+    2.0.7+ds-5~bpo10+1
+    2.0.7+ds-4
+    2.0.7+ds-3
+    2.0.7+ds-2
+    2.0.7+ds-2~bpo10+1
+    2.0.7+ds-2~bpo9+1
+    2.0.7+ds-1
+    2.0.6+ds-2
+    2.0.6+ds-2~bpo10+1
+    2.0.6+ds-2~bpo9+1
+    2.0.6+ds-1
+    2.0.5+ds-2
+    2.0.5+ds-2~bpo10+1
+    2.0.5+ds-2~bpo9+1
+    2.0.5+ds-1
+    2.0.4+ds-1~exp1
+    2.0.4+ds-1~exp
+    2.0.2+ds-7+deb10u3
+    2.0.2+ds-7+deb10u2
+    2.0.2+ds-7+deb10u1
+    2.0.2+ds-7+deb10u1~bpo9+1
+    2.0.2+ds-7
+    2.0.2+ds-6
+    2.0.2+ds-5
+    2.0.2+ds-4
+    2.0.2+ds-3
+    2.0.2+ds-2
+    2.0.2+ds-1
+    2.0.1+ds-2
+    2.0.1+ds-1
+    2.0.0+ds-2
+    2.0.0+ds-1
+    2.0.0~git20181106.ee40242+ds-1
+    2.0.0~beta1+ds-1
+    1.9.18+ds-1
+    1.9.17-1
+    1.9.16-3
+    1.9.16-2
+    1.9.16-1
+    1.9.15-1
+    1.9.14-1
+    1.9.13-2
+    1.9.13-1
+    1.9.12-2
+    1.9.12-1
+    1.9.10-1
+    1.9.7-3+deb9u2
+    1.9.7-3+deb9u1
+    1.9.7-3
+    1.9.7-2
+    1.9.7-1
+    1.9.5-1
+    1.9.4-3
+    1.9.4-2
+    1.9.4-1
+    1.9.3-1
+    1.9.2-1
+    1.9.1-1
+    1.9.0-1
+    1.4.6-3
+    1.4.6-2
+    1.4.6-1
+    1.3.3-1+deb8u2
+    1.3.3-1+deb8u1
+    1.3.3-1
+    1.2.5-1
+    1.2.4-2
+    1.2.4-1
+    1.2.3-1
+    1.2.2-3
+    1.2.2-2
+    1.2.2-1
+    1.2.1-1+svn20120715
+    1.1.2-5+deb7u1
+    1.1.2-5
+    1.1.2-4
+    1.1.2-3
+    1.1.2-2
+    1.1.2-1
+    1.1.1-2
+    1.1.1-1
+    1.1.0-1
+    1.0.4-1
+    1.0.1-1
+    1.0-2
+    1.0-1
+    0.9.4.1-5
+    0.9.4.1-4
+    0.9.4.1-3
+    0.9.4.1-2
+    0.9.4.1-1
+    0.9.4-1
+    0.9.3.4-2
+    0.9.3.4-1
+    0.9.3.2-1
+    0.9.3-1
+    0.9.2-1.1
+    0.9.2-1
+    0.9.1-1
+    0.9-1
+    0.8.3.1-1
