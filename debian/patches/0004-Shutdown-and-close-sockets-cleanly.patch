From: Henrique de Moraes Holschuh <hmh@debian.org>
Date: Tue, 4 Aug 2015 10:38:04 +0200
Subject: Shutdown and close sockets cleanly

Origin: vendor, Debian Cyrus IMAPd 2.1.4-11 (2002-05-19)

Cleanly shutdown and close sockets, this is supposed to allow for better
TCP teardown on the remote end, and reduces CLOSE_WAIT time.

This patch was written 8 years ago, it is possible that nowadays nothing
will benefit from a shutdown() right before close().  The commit log
from eight years ago mentions that SHUT_RD should be upgraded to
SHUT_RDWR where possible, but only after verification that this is not
going to cause problems (e.g. by discarding data still on flight to the
remote).

Also, it is possible that new daemons and utils in Cyrus 2.2 and 2.3 may
need similar patches.
---
 imap/fud.c   | 9 +++++++++
 imap/imapd.c | 4 ++++
 imap/lmtpd.c | 3 +++
 imap/pop3d.c | 3 +++
 4 files changed, 19 insertions(+)

diff --git a/imap/fud.c b/imap/fud.c
index 9cc9128..15b131c 100644
--- a/imap/fud.c
+++ b/imap/fud.c
@@ -143,6 +143,15 @@ void shut_down(int code)
     mboxlist_done();
     closelog();
     cyrus_done();
+
+    /* be nice to remote */
+    shutdown(0, SHUT_RD);
+    shutdown(1, SHUT_RD);
+    shutdown(2, SHUT_RD);
+    close(0);
+    close(1);
+    close(2);
+
     exit(code);
 }
 
diff --git a/imap/imapd.c b/imap/imapd.c
index 6650bb9..e0e5777 100644
--- a/imap/imapd.c
+++ b/imap/imapd.c
@@ -1149,6 +1149,10 @@ void shut_down(int code)
 #ifdef HAVE_SSL
     tls_shutdown_serverengine();
 #endif
+    /* shutdown socket nicely */
+    cyrus_close_sock(0);
+    cyrus_close_sock(1);
+    cyrus_close_sock(2);
 
     cyrus_done();
 
diff --git a/imap/lmtpd.c b/imap/lmtpd.c
index da836ef..37ed210 100644
--- a/imap/lmtpd.c
+++ b/imap/lmtpd.c
@@ -964,6 +964,9 @@ void shut_down(int code)
 
     cyrus_done();
 
+    /* shutdown socket nicely */
+    cyrus_reset_stdio();
+
     exit(code);
 }
 
diff --git a/imap/pop3d.c b/imap/pop3d.c
index 34d6625..0b49922 100644
--- a/imap/pop3d.c
+++ b/imap/pop3d.c
@@ -701,6 +701,9 @@ void shut_down(int code)
 #endif
 
     cyrus_done();
+    cyrus_close_sock(0);
+    cyrus_close_sock(1);
+    cyrus_close_sock(2);
 
     if (config_iolog) {
         read_io_count(io_count_stop);
